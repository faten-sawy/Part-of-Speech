{"ast":null,"code":"var _jsxFileName = \"E:\\\\Typescript Projects\\\\Ngwa Task\\\\client\\\\src\\\\pages\\\\Speech.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialWord = {\n  id: 0,\n  word: '',\n  pos: ''\n};\nconst Speach = () => {\n  _s();\n  const [speeches, setSpeeches] = useState([]);\n  const [renderSpeech, setRenderSpeech] = useState(initialWord);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    receveData();\n    setRenderSpeech(speeches[index]);\n  }, []);\n  const receveData = async () => {\n    const res = await fetch('http://localhost:5000/words');\n    const s = await res.json();\n    setSpeeches(s);\n    console.log(s);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: renderSpeech.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"noun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"adverb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"adjective\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"verb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Speach, \"kcRT8KaKIELyDcMcq7l1eOlOqcU=\");\n_c = Speach;\nexport default Speach;\nvar _c;\n$RefreshReg$(_c, \"Speach\");","map":{"version":3,"names":["useEffect","useState","initialWord","id","word","pos","Speach","speeches","setSpeeches","renderSpeech","setRenderSpeech","index","setIndex","receveData","res","fetch","s","json","console","log"],"sources":["E:/Typescript Projects/Ngwa Task/client/src/pages/Speech.tsx"],"sourcesContent":["import { useEffect,useState } from \"react\"\r\n\r\ninterface word{\r\n    id:number,\r\n    word:string,\r\n    pos:string\r\n}\r\nconst initialWord = {\r\n    id:0,\r\n    word:'',\r\n    pos:''\r\n}\r\nconst Speach = () => {\r\n    const [speeches,setSpeeches] = useState([])\r\n    const [renderSpeech ,setRenderSpeech] = useState<word>(initialWord)\r\n    const [index,setIndex] = useState(0)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        receveData()\r\n        setRenderSpeech(speeches[index])\r\n\r\n    },[])\r\n\r\n    const receveData = async ()=>{\r\n        const res = await fetch('http://localhost:5000/words')\r\n        const s = await res.json()\r\n        setSpeeches(s)\r\n\r\n        console.log(s)\r\n      }\r\n    return(\r\n        <>\r\n       <p>{renderSpeech.word}</p>\r\n        <button>noun</button>\r\n        <button>adverb</button>\r\n        <button>adjective</button>\r\n        <button>verb</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Speach"],"mappings":";;AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAO1C,MAAMC,WAAW,GAAG;EAChBC,EAAE,EAAC,CAAC;EACJC,IAAI,EAAC,EAAE;EACPC,GAAG,EAAC;AACR,CAAC;AACD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAOC,WAAW,CAAC;EACnE,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAIpCD,SAAS,CAAC,MAAI;IACVa,UAAU,EAAE;IACZH,eAAe,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAEpC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAME,UAAU,GAAG,YAAU;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IACtD,MAAMC,CAAC,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC1BT,WAAW,CAACQ,CAAC,CAAC;IAEdE,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAChB,CAAC;EACH,oBACI;IAAA,wBACD;MAAA,UAAIP,YAAY,CAACL;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA,gBAClB;AAEX,CAAC;AAAA,GA7BKE,MAAM;AAAA,KAANA,MAAM;AA+BZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}