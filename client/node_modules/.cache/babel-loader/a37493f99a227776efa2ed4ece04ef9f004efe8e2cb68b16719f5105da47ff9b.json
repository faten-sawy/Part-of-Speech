{"ast":null,"code":"var _jsxFileName = \"E:\\\\Typescript Projects\\\\Ngwa Task\\\\client\\\\src\\\\App.tsx\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  /*  useEffect(()=>{ \n     receveData()\n   },[])\n    const receveData = async ()=>{\n     const res = await fetch('http://localhost:5000/words')\n     const s = await res.json()\n     console.log(s)\n   } */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","props"],"sources":["E:/Typescript Projects/Ngwa Task/client/src/App.tsx"],"sourcesContent":["import './App.css';\nimport React, {useEffect} from 'react'\nimport {BrowserRouter,Route,Routes} from \"react-router-dom\"\nimport Home from './pages/Home';\nimport Speach from './pages/Speech';\n\nexport interface IApplicationProps {}\n\nconst App:React.FunctionComponent<IApplicationProps> = (props) => {\n /*  useEffect(()=>{ \n    receveData()\n  },[])\n\n  const receveData = async ()=>{\n    const res = await fetch('http://localhost:5000/words')\n    const s = await res.json()\n    console.log(s)\n  } */\n  \n  return (\n    <>\n     <p>Hello</p>\n    {/* <BrowserRouter>\n    <Routes>\n      <Route path='/' element={<Home/>}/>\n      <Route path='/speech' element={<Speach/>}/>\n    </Routes>\n    \n    </BrowserRouter> */}\n    </>\n   \n     \n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAmB,OAAO;AAAA;AAAA;AAOtC,MAAMC,GAA8C,GAAIC,KAAK,IAAK;EACjE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACE;IAAA,uBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAY,iBAQV;AAKP,CAAC;AAAA,KA1BKD,GAA8C;AA4BpD,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}