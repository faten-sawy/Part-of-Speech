[{"E:\\Typescript Projects\\Ngwa Task\\client\\src\\index.tsx":"1","E:\\Typescript Projects\\Ngwa Task\\client\\src\\reportWebVitals.ts":"2","E:\\Typescript Projects\\Ngwa Task\\client\\src\\App.tsx":"3","E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\Speech.tsx":"4","E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\Home.tsx":"5","E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\ScoreRank.tsx":"6"},{"size":554,"mtime":1670546440285,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1670546439562,"results":"9","hashOfConfig":"8"},{"size":821,"mtime":1670620331973,"results":"10","hashOfConfig":"8"},{"size":2380,"mtime":1670696178670,"results":"11","hashOfConfig":"8"},{"size":385,"mtime":1670699026144,"results":"12","hashOfConfig":"8"},{"size":793,"mtime":1670693759456,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"vkc3w6",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"17"},"E:\\Typescript Projects\\Ngwa Task\\client\\src\\index.tsx",[],[],[],"E:\\Typescript Projects\\Ngwa Task\\client\\src\\reportWebVitals.ts",[],[],"E:\\Typescript Projects\\Ngwa Task\\client\\src\\App.tsx",["35"],[],"import './App.css';\nimport React, {useEffect} from 'react'\nimport {BrowserRouter ,Route,Routes} from \"react-router-dom\"\nimport Home from './pages/Home';\nimport Speach from './pages/Speech';\nimport ScoreRank from './pages/ScoreRank';\nexport interface IApplicationProps {}\n\nconst App:React.FunctionComponent<IApplicationProps> = (props) => {\n /*  useEffect(()=>{ \n    receveData()\n  },[])\n\n  const receveData = async ()=>{\n    const res = await fetch('http://localhost:5000/words')\n    const s = await res.json()\n    console.log(s)\n  } */\n  \n  return (\n    <BrowserRouter>\n    <Routes>\n      <Route path='/' element={<Home/>}/>\n      <Route path='/speech' element={<Speach/>}/>\n      <Route path=\"/score-rank\" element={<ScoreRank/>}/>\n    </Routes>\n    \n    </BrowserRouter>\n    \n   \n     \n    \n  );\n}\n\nexport default App;\n","E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\Speech.tsx",[],[],"E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\Home.tsx",[],[],"E:\\Typescript Projects\\Ngwa Task\\client\\src\\pages\\ScoreRank.tsx",["36"],[],"import { useEffect,useState } from \"react\"\r\nimport { useLocation,useNavigate } from \"react-router-dom\"\r\nconst ScoreRank = () =>{\r\n    const location = useLocation()\r\n    const [rank,setRank] = useState(0)\r\n    const navigate = useNavigate()\r\n    console.log(location.state.score)\r\n\r\n    useEffect(()=>{\r\n      fetch('http://localhost:4000/rank',{\r\n        method:'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({score:location.state.score}) \r\n       }).then(res=>res.json().then(res=>setRank(res)))\r\n    },[])        \r\n    return(\r\n        <>\r\n        <p>Score Rank</p>\r\n        <p>{rank} %</p>\r\n        <button onClick={()=>navigate('/speech')}>Try again</button>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ScoreRank",{"ruleId":"37","severity":1,"message":"38","line":2,"column":16,"nodeType":"39","messageId":"40","endLine":2,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":17,"column":7,"nodeType":"43","endLine":17,"endColumn":9,"suggestions":"44"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.score'. Either include it or remove the dependency array.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [location.state.score]",{"range":"48","text":"49"},[574,576],"[location.state.score]"]